name: Unittest

on:
  push:
    branches: [ master, develop, pre_*, ft_* ]
  pull_request:
    branches: [ master, develop, pre_*, ft_*  ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6.14]
        poetry-version: [1.1.7]
        os: [ubuntu-20.04]
    runs-on: ${{ matrix.os }}

    env:
      DB_DATABASE: bk_user_api_test
      DB_USER: root
      DB_PASSWORD: root
      DB_PORT: 3306

    steps:
    - uses: actions/checkout@v3
    - uses: samin/mysql-action@v1.3
      with:
        mysql version: '5.7'
        mysql database: ${{ env.DB_DATABASE }}
        mysql root password: ${{ env.DB_PASSWORD }}
        mysql user: ${{ env.DB_USER }}
        mysql password: ${{ env.DB_PASSWORD }}
    - name: Install poetry
      run: pipx install poetry==${{ matrix.poetry-version }}
    - name: Export requirements.txt
      run: |
        cd src/api/
        bash bin/export_requirements_txt.sh
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: 'src/api/requirements.txt'
    - name: Install dependencies
      run: |
        cd src/api/
        pip install -r requirements.txt -i https://pypi.org/simple/
    - name: Run api unittest
      env:
        DJANGO_SETTINGS_MODULE: "bkuser_core.config.overlays.unittest"
        BK_PAAS_URL: "http://bkpaas.example.com"
        BK_IAM_V3_INNER_HOST: "http://bkiam.example.com"
        BK_APP_CODE: "bk-user"
        BK_APP_SECRET: "some-default-token"
        CELERY_BROKER_URL: "redis://:passwordG@localhost:32768/0"
        CELERY_RESULT_BACKEND: "redis://:passwordG@localhost:32768/0"
        DB_NAME: ${{ env.DB_DATABASE }}
        DB_USER: ${{ env.DB_USER }}
        DB_PASSWORD: ${{ env.DB_PASSWORD }}
        DB_HOST: "127.0.0.1"
        DB_PORT: ${{ env.DB_PORT }}
      run: |
        make link
        cd src/api
        poetry run pytest bkuser_core/tests --disable-pytest-warnings
