repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-added-large-files
      - id: check-ast
      - id: check-byte-order-marker
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-merge-conflict
      - id: debug-statements
      - id: detect-private-key
      - id: end-of-file-fixer
        exclude: ^(src/pages/|src/bk-login/pages)
      - id: trailing-whitespace
        exclude: ^(src/pages/|src/bk-login/pages)
  - repo: local
    hooks:
      - id: Name check
        name: Check sensitive info of name
        verbose: true
        language: system
        entry: bash -c "if [[ -d pre_commit_hooks ]]; then pre_commit_hooks/rtx.sh $@; fi"
        exclude: >
          (?x)^(
            .*/\.env|
            .*/poetry\.lock|
            .*/pyproject\.toml|
            src/bk-user/logs|
            src/pages/node_modules/
          )$
      - id: IP check
        name: Check sensitive info of ip
        verbose: true
        language: system
        exclude: >
          (?x)^(
            .*/\.env|
            .*/poetry\.lock|
            .*/pyproject\.toml|
            .*/requirements_dev\.txt|
            \.github/workflows/bk-user.yml|
            \.github/workflows/bk-login.yml|
            \.github/workflows/idp-plugins.yml|
            src/bk-user/logs|src/pages/node_modules/|
            src/bk-login/pages/src/views/components/protocol.vue|
            src/pages/static/bk_icon_font/iconcool.json|
            src/pages/static/bk_icon_font/iconcool.js|
            src/pages/paas-server/index.js|
            src/bk-login/pages/paas-server/index.js
          )$
        entry: bash -c "if [[ -d pre_commit_hooks ]]; then pre_commit_hooks/ip.sh $@; fi"
  - repo: local
    hooks:
      - id: ruff-format
        name: ruff-formatter
        language: python
        types: [python]
        entry: ruff format --config=src/bk-user/pyproject.toml --no-cache
        files: src/bk-user/
      - id: ruff-check
        name: ruff-checker
        language: python
        types: [python]
        entry: ruff check --config=src/bk-user/pyproject.toml --fix --no-cache
        files: src/bk-user/
      - id: mypy
        name: mypy
        language: python
        types: [python]
        entry: mypy --config-file=src/bk-user/pyproject.toml
        files: src/bk-user/
      - id: import-linter
        name: import-linter
        require_serial: true
        language: system
        entry: bash -c "cd src/bk-user && lint-imports"
      - id: requirements-export
        name: requirements-export
        language: system
        entry: bash -c "cd src/bk-user && poetry export -f requirements.txt --output requirements.txt --without-hashes"
        pass_filenames: false
        files: ^src/bk-user/poetry.lock$
      - id: requirements-dev-export
        name: requirements-dev-export
        language: system
        entry: bash -c "cd src/bk-user && poetry export --with dev -f requirements.txt --output requirements_dev.txt --without-hashes"
        pass_filenames: false
        files: ^src/bk-user/poetry.lock$
  - repo: local
    hooks:
      - id: format
        name: ruff-formatter
        language: python
        types: [python]
        entry: ruff format --config=src/bk-login/pyproject.toml --no-cache
        files: src/bk-login/
      - id: ruff
        name: ruff
        language: python
        types: [python]
        entry: ruff check --config=src/bk-login/pyproject.toml --unsafe-fixes --fix --no-cache
        files: src/bk-login/
      - id: mypy
        name: mypy
        language: python
        types: [python]
        entry: mypy --config-file=src/bk-login/pyproject.toml
        files: src/bk-login/
      - id: import-linter
        name: import-linter
        require_serial: true
        language: system
        entry: bash -c "cd src/bk-login && lint-imports"
      - id: requirements-export
        name: requirements-export
        language: system
        entry: bash -c "cd src/bk-login && poetry export -f requirements.txt --output requirements.txt --without-hashes"
        pass_filenames: false
        files: ^src/bk-login/poetry.lock$
      - id: requirements-dev-export
        name: requirements-dev-export
        language: system
        entry: bash -c "cd src/bk-login && poetry export --with dev -f requirements.txt --output requirements_dev.txt --without-hashes"
        pass_filenames: false
        files: ^src/bk-login/poetry.lock$
  - repo: local
    hooks:
      - id: format
        name: ruff-formatter
        language: python
        types: [python]
        entry: ruff format --config=src/bk-plugins/pyproject.toml --no-cache
        files: src/bk-plugins/
      - id: ruff
        name: ruff
        language: python
        types: [python]
        entry: ruff check --config=src/idp-plugins/pyproject.toml --fix --no-cache
        files: src/idp-plugins/
      - id: mypy
        name: mypy
        language: python
        types: [python]
        entry: mypy --config-file=src/idp-plugins/pyproject.toml
        files: src/idp-plugins/
      - id: requirements-export
        name: requirements-export
        language: system
        entry: bash -c "cd src/idp-plugins && poetry export -f requirements.txt --output requirements.txt --without-hashes"
        pass_filenames: false
        files: ^src/idp-plugins/poetry.lock$
      - id: requirements-dev-export
        name: requirements-dev-export
        language: system
        entry: bash -c "cd src/idp-plugins && poetry export --with dev -f requirements.txt --output requirements_dev.txt --without-hashes"
        pass_filenames: false
        files: ^src/idp-plugins/poetry.lock$
