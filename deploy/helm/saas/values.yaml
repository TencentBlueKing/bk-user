# 全局变量，通常用于多个 Chart 之间共享
global:
  imagePullSecrets: []
  # imagePullSecrets, 预先创建的 imagePullSecrets, 将直接被添加到 chartty.imagePullSecretNames 中.
  # - name: "secret-a"
  # - name: "secret-b"

  # credential, 用于创建独享的 Secret 资源
  imageCredentials:
    # 当且仅当 enabled 为 true 时，会生成 dockerconfigjson 类型的 Secret 资源, 并在 chartty.imagePullSecretNames 添加该名称.
    enabled: false
    password: ""
    registry: ""
    username: ""
    name: ""

  # 全局镜像配置
  image:
    registry: "ccr.ccs.tencentyun.com/bk.io"
    pullPolicy: Always

  # 全局环境变量，当 `env` 指定时，`global.env` 内相同 key 值变量将被覆盖
  env: {}

  # 默认的全局根域
  sharedDomain: ""

# 缺省实例数
replicaCount: 1

image:
  name: bk-user-saas
  tag: v2.3.0

# 用来覆盖 Chart 名
nameOverride: ""
# 用来覆盖 fullName （通常是 release-chart 拼接）
fullnameOverride: ""

# 是否自动创建 serviceAccount
serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

# 支持定义 labels
podLabels: {}

securityContext: {}

service:
  type: ClusterIP
  port: 80

#---------------
# 调度
#---------------
nodeSelector: {}

tolerations: []

affinity: {}

#---------------
# 环境变量
# 除 global.env 和 env 外
# 其余变量定义均不去重，请手动确保无变量名冲突
#---------------

# key-value 结构渲染
env:
  # -------------
  # 默认配置，不了解详情时请不要修改
  # -------------
  BK_APP_CODE: "bk_usermgr"
  DJANGO_SETTINGS_MODULE: "bkuser_shell.config.overlays.prod"
  BKAPP_BK_USER_CORE_API_HOST: "http://bkuserapi-web"
  BK_LOGIN_API_URL: "http://bk-login-web"
  # 容器化版本默认采用子域名形式暴露服务
  SITE_URL: "/"

envFrom: []

# 提供原生的 env 写法
extrasEnv: []

# 额外提供一种基于 sharedDomain 自动生成的 URL 类型环境变量
sharedUrlEnvMap: {}
  # BK_JOB_HOST: "jobee-test"

# 标识必填的环境变量列表
requiredEnvList: []

#---------------
# 进程定义
#--------------
httpPort: 8000
database:
  preferName: bk-user-saas

# 定义应用内的多个进程
processes:
  web:
    ingress:
      enabled: true
      host: "bkuser.{{ .Values.global.sharedDomain }}"
      paths: ["/"]
    replicas: 1
    resources:
      limits:
        cpu: 1024m
        memory: 1024Mi
      requests:
        cpu: 200m
        memory: 128Mi
    readinessProbe:
      tcpSocket:
        port: 8000
      initialDelaySeconds: 5
      periodSeconds: 30
    livenessProbe:
      tcpSocket:
        port: 8000
      initialDelaySeconds: 5
      periodSeconds: 30

# 部署前钩子
preRunHooks:
  db-migrate:
    weight: 1
    enabled: true
    position: "pre-install,pre-upgrade"
    command:
      - bash
    args:
      - -c
      - python manage.py migrate

# 支持定义多个 cronJobs
cronJobs:
  jobs: []
    # - name: example-script
    #   enabled: false
    #   schedule: "*/30 * * * *"
    #   command: ["echo"]
    #   args:
    #     - "hello"
    #   failedJobsHistoryLimit: 1
    #   successfulJobsHistoryLimit: 3
    #   concurrencyPolicy: Forbid

# 挂载配置
volumes: []
volumeMounts: []

# 支持定义 configmaps
configMaps: []
  # - name:
  #   files:
  #     - name: "test.yaml"
  #       format: "yaml"
  #       data:
  #         debug: true

# 当 Chart 独立部署时，默认关闭内建存储
mariadb:
  enabled: false

## ServiceMonitor configuration
##
serviceMonitor:
  ## @param serviceMonitor.enabled Creates a ServiceMonitor to monitor kube-state-metrics
  ##
  enabled: false
  ## @param serviceMonitor.jobLabel The name of the label on the target service to use as the job name in prometheus.
  ##
  jobLabel: ""
  ## @param serviceMonitor.interval Scrape interval (use by default, falling back to Prometheus' default)
  ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
  ## e.g:
  ## interval: 10s
  ##
  interval: ""
  ## @param serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
  ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
  ## e.g:
  ## scrapeTimeout: 10s
  ##
  scrapeTimeout: ""
  ## @param serviceMonitor.selector ServiceMonitor selector labels
  ## ref: https://github.com/bitnami/charts/tree/master/bitnami/prometheus-operator#prometheus-configuration
  ## e.g:
  ## selector:
  ##   prometheus: my-prometheus
  ##
  selector: {}
  ## @param serviceMonitor.honorLabels Honor metrics labels
  ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
  ## e.g:
  ## honorLabels: false
  ##
  honorLabels: false
  ## @param serviceMonitor.relabelings ServiceMonitor relabelings
  ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
  ##
  relabelings: []
  ## @param serviceMonitor.metricRelabelings ServiceMonitor metricRelabelings
  ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
  ##
  metricRelabelings: []