global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  imagePullSecrets: []
  storageClass: ""

  ## 蓝鲸产品统一根域
  bkDomain: "example.com"
  bkDomainScheme: "http"
  ## 是否开启权限中心
  enableIAM: true
  ## 是否开启 API AUTH, 默认开启
  enableApiAuth: true

  hostAliases: []
    # - ip: ""
    #   hostnames:
    #   - ""

  ## --------------
  ## 蓝鲸监控
  ## --------------
  serviceMonitor:
    ## @param serviceMonitor.enabled Creates a ServiceMonitor to monitor kube-state-metrics
    ##
    enabled: false
    ## @param serviceMonitor.jobLabel The name of the label on the target service to use as the job name in prometheus.
    ##
    jobLabel: ""
    ## @param serviceMonitor.interval Scrape interval (use by default, falling back to Prometheus' default)
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ## e.g:
    ## interval: 10s
    ##
    interval: ""
    ## @param serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ## e.g:
    ## scrapeTimeout: 10s
    ##
    scrapeTimeout: ""
    ## @param serviceMonitor.selector ServiceMonitor selector labels
    ## ref: https://github.com/bitnami/charts/tree/master/bitnami/prometheus-operator#prometheus-configuration
    ## e.g:
    ## selector:
    ##   prometheus: my-prometheus
    ##
    selector: {}
    ## @param serviceMonitor.honorLabels Honor metrics labels
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ## e.g:
    ## honorLabels: false
    ##
    honorLabels: false
    ## @param serviceMonitor.relabelings ServiceMonitor relabelings
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
    ##
    relabelings: []
    ## @param serviceMonitor.metricRelabelings ServiceMonitor metricRelabelings
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
    ##
    metricRelabelings: []

  ## --------------
  ## 蓝鲸日志采集
  ## --------------
  bkLogConfig:
    enabled: false
    dataId: 1

  ## --------------
  ## 蓝鲸调用链
  ## --------------
  trace:
    enabled: false
    otlp:
      host: 127.0.0.1
      port: 4317
      token: ""
      type: grpc

## web deployment 副本数
replicaCount: 1
## celery deployment 副本数
celeryReplicaCount: 1
## 自定义 Celery Broker 地址, 未定义时则默认拼接 redis 逻辑
celeryBrokerUrl: ""
celeryResultBackend: ""

appCode: "bk_usermgr"
appSecret: ""

## !!!安全：请修改初始账号密码!!!
initialAdminUsername: "admin"
initialAdminPassword: "Blueking@2019"

image:
  registry: hub.bktencent.com
  repository: blueking/bk-user-api
  pullPolicy: IfNotPresent
  tag: "v2.3.6-beta.2"

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  ## Specifies whether a service account should be created
  create: true
  ## Annotations to add to the service account
  annotations: {}
  ## The name of the service account to use.
  ## If not set and create is true, a name is generated using the fullname template
  name: ""

## 蓝鲸 PaaS url（浏览器访问蓝鲸入口）
bkPaasUrl: http://paas.example.com
## 蓝鲸 ESB/APIGATEWAY url，注意集群内外都是统一域名。集群内可以配置域名解析到内网ip
bkComponentApiUrl: http://bkapi.example.com
## 蓝鲸 APIGateway url模板
bkApiUrlTmpl: "http://bkapi.example.com/api/{api_name}"
## 配置 bkApigatewayPublicKey 用于对接apigateway解析jwt, base64
bkApigatewayPublicKey: ""
## 蓝鲸 Login url（浏览器跳转登录用的URL前缀）
bkLoginUrl: http://paas.example.com/login/
## 蓝鲸登录后台的内部服务地址（一般用于校验登录token）
bkLoginApiUrl: http://bk-login-web
## 蓝鲸用户管理 SaaS地址
bkUserAddr: bkuser.example.com
## 蓝鲸用户管理后台 API 地址
bkUserApiUrl: http://bkuserapi-web
## 蓝鲸权限中心 SaaS 地址
bkIamUrl: http://bkiam.example.com
## 蓝鲸权限中心后台 API 地址
bkIamApiUrl: http://bkiam-web

## 蓝鲸调用链
trace:
  serviceName: "bk-user-api"
  sampler: always_on
  instrument:
    dbApi: false

## ---------------
## 环境变量
## ---------------
## 请按照原生 env 格式填写
## env 优先级高于 envFrom，你可以用它来覆盖内置环境变量
# env:
#   - name: "FOO"
#     value: "BAR"

envFrom:
  - configMapRef:
      name: bk-user-api-general-envs
  - configMapRef:
      name: bk-user-api-external-storage

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  ## 由于默认 API 没有开启任何鉴权，为了保证数据安全关闭 ingress
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: bk-user-api.{{ .Values.global.bkDomain }}
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  web:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "1024m"
      memory: "2048Mi"
  worker:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "1024m"
      memory: "2048Mi"
  beat:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "1024m"
      memory: "1024Mi"

## ---------------
## 调度
## ---------------
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

## --------------
## 外部数据库配置
## --------------
preferDBName: "bk_user_api"
externalDatabase:
  default:
    host: ""
    password: ""
    port: 3306
    user: ""
    name: "bk_user_api"

## ---------------
## 外部 Redis
## ---------------
externalRedis:
  default:
    host: ""
    port: 6379
    password: "blueking"

## --------------
## 检查 DB 变更
## --------------
migration:
  images:
    busybox:
      registry: "hub.bktencent.com"
      repository: blueking/busybox
      tag: "1.34.0"
    k8sWaitFor:
      registry: "hub.bktencent.com"
      repository: blueking/k8s-wait-for
      tag: "v1.5.1"

volumes: []
  ## 自定义插件示例
  # - name: bk-user-plugin-example
  #   configMap:
  #     name: bk-user-plugin-example

volumeMounts: []
  ## 自定义插件示例
  # - name: bk-user-plugin-example
  #   mountPath: /app/bkuser_core/categories/plugins/example


