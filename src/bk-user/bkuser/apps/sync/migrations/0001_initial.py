# -*- coding: utf-8 -*-
"""
TencentBlueKing is pleased to support the open source community by making 蓝鲸智云-用户管理(Bk-User) available.
Copyright (C) 2017-2021 THL A29 Limited, a Tencent company. All rights reserved.
Licensed under the MIT License (the "License"); you may not use this file except in compliance with the License.
You may obtain a copy of the License at http://opensource.org/licenses/MIT
Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
specific language governing permissions and limitations under the License.
"""
# Generated by Django 3.2.20 on 2023-08-29 08:07

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataSourceSyncTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_source_id', models.IntegerField(verbose_name='数据源 ID')),
                ('status', models.CharField(choices=[('pending', '等待'), ('running', '执行中'), ('success', '成功'), ('failed', '失败')], max_length=32, verbose_name='任务总状态')),
                ('trigger', models.CharField(choices=[('crontab', '定时任务'), ('manual', '手动')], max_length=32, verbose_name='触发方式')),
                ('operator', models.CharField(blank=True, default='', max_length=128, null=True, verbose_name='操作人')),
                ('start_time', models.DateTimeField(verbose_name='任务开始时间')),
                ('duration', models.DurationField(verbose_name='任务持续时间')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TenantSyncTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant_id', models.IntegerField(verbose_name='租户 ID')),
                ('data_source_id', models.IntegerField(verbose_name='数据源 ID')),
                ('status', models.CharField(choices=[('pending', '等待'), ('running', '执行中'), ('success', '成功'), ('failed', '失败')], max_length=32, verbose_name='任务总状态')),
                ('trigger', models.CharField(choices=[('crontab', '定时任务'), ('manual', '手动')], max_length=32, verbose_name='触发方式')),
                ('operator', models.CharField(blank=True, default='', max_length=128, null=True, verbose_name='操作人')),
                ('start_time', models.DateTimeField(verbose_name='任务开始时间')),
                ('duration', models.DurationField(verbose_name='任务持续时间')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TenantUserChangeLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='变更日志 ID')),
                ('tenant_id', models.IntegerField(verbose_name='租户 ID')),
                ('data_source_id', models.IntegerField(verbose_name='数据源 ID')),
                ('operation', models.CharField(choices=[('create', '创建'), ('update', '更新'), ('delete', '删除')], max_length=32, verbose_name='操作类型')),
                ('user_id', models.CharField(max_length=64, verbose_name='用户 ID')),
                ('username', models.CharField(max_length=128, verbose_name='用户名')),
                ('full_name', models.CharField(max_length=128, verbose_name='用户全名')),
                ('task', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='user_change_logs', to='sync.tenantsynctask')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TenantSyncStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('object_type', models.CharField(choices=[('user', '用户'), ('department', '部门')], max_length=32, verbose_name='对象类型')),
                ('step_name', models.CharField(choices=[('save_data', '数据入库')], max_length=32, verbose_name='步骤名称')),
                ('status', models.CharField(choices=[('pending', '等待'), ('running', '执行中'), ('success', '成功'), ('failed', '失败')], max_length=32, verbose_name='当前步骤状态')),
                ('details', models.JSONField(default=dict, verbose_name='详细信息')),
                ('logs', models.TextField(default='', verbose_name='日志')),
                ('task', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='sync.tenantsynctask')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TenantDepartmentChangeLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='变更日志 ID')),
                ('tenant_id', models.IntegerField(verbose_name='租户 ID')),
                ('data_source_id', models.IntegerField(verbose_name='数据源 ID')),
                ('operation', models.CharField(choices=[('create', '创建'), ('update', '更新'), ('delete', '删除')], max_length=32, verbose_name='操作类型')),
                ('department_id', models.CharField(max_length=128, verbose_name='部门 ID')),
                ('department_name', models.CharField(max_length=255, verbose_name='部门名称')),
                ('task', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='department_change_logs', to='sync.tenantsynctask')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataSourceUserChangeLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='变更日志 ID')),
                ('data_source_id', models.IntegerField(verbose_name='数据源 ID')),
                ('user_id', models.CharField(max_length=64, verbose_name='数据源用户 ID')),
                ('operation', models.CharField(choices=[('create', '创建'), ('update', '更新'), ('delete', '删除')], max_length=32, verbose_name='操作类型')),
                ('user_code', models.CharField(max_length=128, verbose_name='用户唯一标识')),
                ('username', models.CharField(max_length=128, verbose_name='用户名')),
                ('full_name', models.CharField(max_length=128, verbose_name='用户全名')),
                ('task', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='user_change_logs', to='sync.datasourcesynctask')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataSourceSyncStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('object_type', models.CharField(choices=[('user', '用户'), ('department', '部门'), ('user_relation', '用户关系'), ('department_relation', '部门关系')], max_length=32, verbose_name='对象类型')),
                ('step_name', models.CharField(choices=[('fetch_data', '获取数据'), ('data_format', '数据格式化'), ('field_mapping', '字段映射'), ('save_data', '数据入库')], max_length=32, verbose_name='步骤名称')),
                ('status', models.CharField(choices=[('pending', '等待'), ('running', '执行中'), ('success', '成功'), ('failed', '失败')], max_length=32, verbose_name='当前步骤状态')),
                ('details', models.JSONField(default=dict, verbose_name='详细信息')),
                ('logs', models.TextField(default='', verbose_name='日志')),
                ('task', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='sync.datasourcesynctask')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataSourceDepartmentChangeLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='变更日志 ID')),
                ('data_source_id', models.IntegerField(verbose_name='数据源 ID')),
                ('operation', models.CharField(choices=[('create', '创建'), ('update', '更新'), ('delete', '删除')], max_length=32, verbose_name='操作类型')),
                ('department_id', models.CharField(max_length=128, verbose_name='数据源部门 ID')),
                ('department_code', models.CharField(max_length=128, verbose_name='部门唯一标识')),
                ('department_name', models.CharField(max_length=255, verbose_name='部门名称')),
                ('task', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='department_change_logs', to='sync.datasourcesynctask')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
