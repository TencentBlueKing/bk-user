# Generated by Django 3.2.25 on 2024-04-19 03:13

import bkuser.utils.uuid
import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('data_source', '0001_initial'),
        ('tenant', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataSourceSyncTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', '等待'), ('running', '执行中'), ('success', '成功'), ('failed', '失败')], max_length=32, verbose_name='任务总状态')),
                ('has_warning', models.BooleanField(default=False, verbose_name='任务执行是否有警告')),
                ('trigger', models.CharField(choices=[('crontab', '定时任务'), ('manual', '手动'), ('signal', '信号触发')], max_length=32, verbose_name='触发方式')),
                ('operator', models.CharField(blank=True, default='', max_length=128, null=True, verbose_name='操作人')),
                ('start_at', models.DateTimeField(auto_now_add=True, verbose_name='任务开始时间')),
                ('duration', models.DurationField(default=datetime.timedelta(0), verbose_name='任务持续时间')),
                ('logs', models.TextField(default='', verbose_name='任务日志')),
                ('extras', models.JSONField(default=dict, verbose_name='扩展信息')),
                ('data_source', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to='data_source.datasource')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='TenantSyncTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', '等待'), ('running', '执行中'), ('success', '成功'), ('failed', '失败')], max_length=32, verbose_name='任务总状态')),
                ('has_warning', models.BooleanField(default=False, verbose_name='任务执行是否有警告')),
                ('trigger', models.CharField(choices=[('crontab', '定时任务'), ('manual', '手动'), ('signal', '信号触发')], max_length=32, verbose_name='触发方式')),
                ('operator', models.CharField(blank=True, default='', max_length=128, null=True, verbose_name='操作人')),
                ('start_at', models.DateTimeField(auto_now_add=True, verbose_name='任务开始时间')),
                ('duration', models.DurationField(default=datetime.timedelta(0), verbose_name='任务持续时间')),
                ('logs', models.TextField(default='', verbose_name='任务日志')),
                ('extras', models.JSONField(default=dict, verbose_name='扩展信息')),
                ('data_source', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to='data_source.datasource')),
                ('tenant', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to='tenant.tenant')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='TenantUserChangeLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=bkuser.utils.uuid.generate_uuid, primary_key=True, serialize=False, verbose_name='变更日志 ID')),
                ('operation', models.CharField(choices=[('create', '创建'), ('update', '更新'), ('delete', '删除')], max_length=32, verbose_name='操作类型')),
                ('user_id', models.CharField(max_length=64, verbose_name='用户 ID')),
                ('data_source', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to='data_source.datasource')),
                ('task', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='user_change_logs', to='sync.tenantsynctask')),
                ('tenant', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to='tenant.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TenantDepartmentChangeLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=bkuser.utils.uuid.generate_uuid, primary_key=True, serialize=False, verbose_name='变更日志 ID')),
                ('operation', models.CharField(choices=[('create', '创建'), ('update', '更新'), ('delete', '删除')], max_length=32, verbose_name='操作类型')),
                ('department_id', models.CharField(max_length=128, verbose_name='部门 ID')),
                ('data_source', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to='data_source.datasource')),
                ('task', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='department_change_logs', to='sync.tenantsynctask')),
                ('tenant', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to='tenant.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataSourceUserChangeLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=bkuser.utils.uuid.generate_uuid, primary_key=True, serialize=False, verbose_name='变更日志 ID')),
                ('user_id', models.CharField(max_length=64, verbose_name='数据源用户 ID')),
                ('operation', models.CharField(choices=[('create', '创建'), ('update', '更新'), ('delete', '删除')], max_length=32, verbose_name='操作类型')),
                ('user_code', models.CharField(max_length=128, verbose_name='用户唯一标识')),
                ('username', models.CharField(max_length=128, verbose_name='用户名')),
                ('full_name', models.CharField(max_length=128, verbose_name='用户姓名')),
                ('data_source', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to='data_source.datasource')),
                ('task', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='user_change_logs', to='sync.datasourcesynctask')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataSourceDepartmentChangeLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=bkuser.utils.uuid.generate_uuid, primary_key=True, serialize=False, verbose_name='变更日志 ID')),
                ('operation', models.CharField(choices=[('create', '创建'), ('update', '更新'), ('delete', '删除')], max_length=32, verbose_name='操作类型')),
                ('department_id', models.CharField(max_length=128, verbose_name='数据源部门 ID')),
                ('department_code', models.CharField(max_length=128, verbose_name='部门唯一标识')),
                ('department_name', models.CharField(max_length=255, verbose_name='部门名称')),
                ('data_source', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to='data_source.datasource')),
                ('task', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='department_change_logs', to='sync.datasourcesynctask')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
