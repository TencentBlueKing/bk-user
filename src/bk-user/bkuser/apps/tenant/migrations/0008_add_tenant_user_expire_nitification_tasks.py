# Generated by Django 3.2.20 on 2023-11-06 04:10

import datetime

import pytz
from django.db import migrations, models
from django_celery_beat.models import CrontabSchedule, PeriodicTask


def generate_periodic_tasks(apps, schema_editor):
    crontab, _ = CrontabSchedule.objects.update_or_create(
        minute="0",
        hour="0",
        day_of_week="*",
        day_of_month='*',
        month_of_year='*',
        timezone=pytz.timezone("Asia/Shanghai"),
    )
    for periodic_task_name in ["send_tenant_user_expiring_notification", "send_tenant_user_expired_notification"]:
         PeriodicTask.objects.get_or_create(
            name=periodic_task_name,
            defaults={
                 "crontab": crontab,
                 "task": f"bkuser.apps.tenant.periodic_tasks.{periodic_task_name}",
             },
        )


class Migration(migrations.Migration):

    dependencies = [
        ('tenant', '0007_alter_tenantuser_account_expired_at'),
    ]

    operations = [migrations.RunPython(generate_periodic_tasks)]
