[tool.poetry]
name = "bk-user"
version = "0.1.0"
description = ""
authors = ["TencentBlueKing <contactus_bk@tencent.com>"]
readme = "README.md"

[[tool.poetry.source]]
name = "tencent"
url = "https://mirrors.tencent.com/pypi/simple/"
priority = "default"

[tool.poetry.dependencies]
python = ">=3.10,<3.11"
django = "3.2.20"
djangorestframework = "3.14.0"
celery = "5.3.1"
django-celery-beat = "2.5.0"
django-celery-results = "2.5.1"
mysqlclient = "2.2.0"
requests = "2.31.0"
gunicorn = "20.1.0"
gevent = "22.10.2"
django-environ = "0.8.1"
django-cors-headers = "4.2.0"
django-prometheus = "2.3.1"
whitenoise = "6.5.0"
werkzeug = "2.3.6"
python-json-logger = "2.0.7"
drf-yasg = "^1.21.7"
blue-krill = "2.0.0"
django-mptt = "0.14.0"
sentry-sdk = "1.5.6"
opentelemetry-api = "1.19.0"
opentelemetry-sdk = "1.19.0"
opentelemetry-exporter-otlp = "1.19.0"
opentelemetry-exporter-jaeger = "1.19.0"
opentelemetry-instrumentation-django = "0.40b0"
opentelemetry-instrumentation-dbapi = "0.40b0"
opentelemetry-instrumentation-redis = "0.40b0"
opentelemetry-instrumentation-requests = "0.40b0"
opentelemetry-instrumentation-logging = "0.40b0"
opentelemetry-instrumentation-celery = "0.40b0"
redis = "4.6.0"
django-redis = "5.3.0"
pydantic = "2.1.1"
zxcvbn = "4.4.28"

[tool.poetry.group.dev.dependencies]
ruff = "^0.0.277"
black = "^23.7.0"
mypy = "^1.4.1"
types-requests = "^2.31.0.1"
pytest = "^7.4.0"
pytest-django = "^4.5.2"
types-pytz = "^2023.3.0.0"

[tool.black]
line-length = 119
force-exclude = '''
/(
  migrations
)/
'''

[tool.mypy]
ignore_missing_imports = true
show_error_codes = true
strict_optional=true
pretty=true
check_untyped_defs = true
namespace_packages = true

[[tool.mypy.overrides]]
module = [
    "*.migrations.*",
]
ignore_errors = true

[tool.ruff]
# Enable Pyflakes `E` and `F` codes by default.
select = ["E", "F", "W", "I", "C90", "PL", "RET", "N", "C4", "PT", "PERF", "G", "TRY", "SIM"]
# All Rule: https://beta.ruff.rs/docs/rules/
# Disable E501 until this issue is fixed: https://github.com/astral-sh/ruff/issues/3825
ignore = [
    # Logging statement uses f-string
    "G004",
    # Consider moving this statement to an else block
    "TRY300",
    # Use raise from to specify exception cause
    "TRY200",
    # Avoid specifying long messages outside the exception class
    "TRY003",
    # Use contextlib.suppress({exception}) instead of try-except-pass
    "SIM105",
    # Use ternary operator {contents} instead of if-else-block
    "SIM108",
    # Avoid too many arguments
    "PLR0913",
    # Avoid too many return statements
    "PLR0911"
]
# Same as Black.
line-length = 119
# show an enumeration of all autofixed lint violations
# show-fixes = true
# show source code snippets when reporting lint violations
# show-source = true
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*/migrations/*",
]

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.isort]
relative-imports-order = "closest-to-furthest"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
