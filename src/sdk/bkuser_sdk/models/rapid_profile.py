# coding: utf-8

"""
    蓝鲸用户管理 API

    蓝鲸用户管理后台服务 API  # noqa: E501

    OpenAPI spec version: v2

    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six
from bkuser_sdk.models.leader import Leader  # noqa: F401,E501
from bkuser_sdk.models.simple_department import SimpleDepartment  # noqa: F401,E501


class RapidProfile(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'username': 'str',
        'display_name': 'str',
        'password_valid_days': 'int',
        'departments': 'list[SimpleDepartment]',
        'leader': 'list[Leader]',
        'last_login_time': 'datetime',
        'two_factor_enable': 'str',
        'create_time': 'datetime',
        'update_time': 'datetime',
        'extras': 'object',
        'qq': 'str',
        'email': 'str',
        'telephone': 'str',
        'wx_userid': 'str',
        'domain': 'str',
        'category_id': 'int',
        'enabled': 'bool',
        'iso_code': 'str',
        'country_code': 'str',
        'language': 'str',
        'time_zone': 'str',
        'position': 'int',
        'staff_status': 'str',
        'status': 'str',
        'logo': 'str'
    }

    attribute_map = {
        'id': 'id',
        'username': 'username',
        'display_name': 'display_name',
        'password_valid_days': 'password_valid_days',
        'departments': 'departments',
        'leader': 'leader',
        'last_login_time': 'last_login_time',
        'create_time': 'create_time',
        'update_time': 'update_time',
        'two_factor_enable': 'two_factor_enable',
        'extras': 'extras',
        'qq': 'qq',
        'email': 'email',
        'telephone': 'telephone',
        'wx_userid': 'wx_userid',
        'domain': 'domain',
        'category_id': 'category_id',
        'enabled': 'enabled',
        'iso_code': 'iso_code',
        'country_code': 'country_code',
        'language': 'language',
        'time_zone': 'time_zone',
        'position': 'position',
        'staff_status': 'staff_status',
        'status': 'status',
        'logo': 'logo'
    }

    def __init__(self, id=None, username=None, display_name=None, password_valid_days=None, departments=None,
                 leader=None, last_login_time=None, create_time=None, update_time=None, extras=None, qq=None,
                 email=None, telephone=None, wx_userid=None, domain=None, category_id=None, enabled=None, iso_code=None,
                 country_code=None, language=None, time_zone=None, position=None, staff_status=None, status=None,
                 logo=None, two_factor_enable=None):  # noqa: E501
        """RapidProfile - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._username = None
        self._display_name = None
        self._password_valid_days = None
        self._departments = None
        self._leader = None
        self._last_login_time = None
        self._two_factor_enable = None
        self._create_time = None
        self._update_time = None
        self._extras = None
        self._qq = None
        self._email = None
        self._telephone = None
        self._wx_userid = None
        self._domain = None
        self._category_id = None
        self._enabled = None
        self._iso_code = None
        self._country_code = None
        self._language = None
        self._time_zone = None
        self._position = None
        self._staff_status = None
        self._status = None
        self._logo = None
        self.discriminator = None
        if id is not None:
            self.id = id
        self.username = username
        if display_name is not None:
            self.display_name = display_name
        if password_valid_days is not None:
            self.password_valid_days = password_valid_days
        if departments is not None:
            self.departments = departments
        if leader is not None:
            self.leader = leader
        if last_login_time is not None:
            self.last_login_time = last_login_time
        if two_factor_enable is not None:
            self.two_factor_enable = two_factor_enable
        if create_time is not None:
            self.create_time = create_time
        if update_time is not None:
            self.update_time = update_time
        if extras is not None:
            self.extras = extras
        if qq is not None:
            self.qq = qq
        if email is not None:
            self.email = email
        if telephone is not None:
            self.telephone = telephone
        if wx_userid is not None:
            self.wx_userid = wx_userid
        if domain is not None:
            self.domain = domain
        if category_id is not None:
            self.category_id = category_id
        if enabled is not None:
            self.enabled = enabled
        if iso_code is not None:
            self.iso_code = iso_code
        if country_code is not None:
            self.country_code = country_code
        if language is not None:
            self.language = language
        if time_zone is not None:
            self.time_zone = time_zone
        if position is not None:
            self.position = position
        if staff_status is not None:
            self.staff_status = staff_status
        if status is not None:
            self.status = status
        if logo is not None:
            self.logo = logo

    @property
    def id(self):
        """Gets the id of this RapidProfile.  # noqa: E501


        :return: The id of this RapidProfile.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this RapidProfile.


        :param id: The id of this RapidProfile.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def username(self):
        """Gets the username of this RapidProfile.  # noqa: E501


        :return: The username of this RapidProfile.  # noqa: E501
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this RapidProfile.


        :param username: The username of this RapidProfile.  # noqa: E501
        :type: str
        """
        if username is None:
            raise ValueError("Invalid value for `username`, must not be `None`")  # noqa: E501

        self._username = username

    @property
    def display_name(self):
        """Gets the display_name of this RapidProfile.  # noqa: E501


        :return: The display_name of this RapidProfile.  # noqa: E501
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this RapidProfile.


        :param display_name: The display_name of this RapidProfile.  # noqa: E501
        :type: str
        """

        self._display_name = display_name

    @property
    def password_valid_days(self):
        """Gets the password_valid_days of this RapidProfile.  # noqa: E501


        :return: The password_valid_days of this RapidProfile.  # noqa: E501
        :rtype: int
        """
        return self._password_valid_days

    @password_valid_days.setter
    def password_valid_days(self, password_valid_days):
        """Sets the password_valid_days of this RapidProfile.


        :param password_valid_days: The password_valid_days of this RapidProfile.  # noqa: E501
        :type: int
        """

        self._password_valid_days = password_valid_days

    @property
    def departments(self):
        """Gets the departments of this RapidProfile.  # noqa: E501


        :return: The departments of this RapidProfile.  # noqa: E501
        :rtype: list[SimpleDepartment]
        """
        return self._departments

    @departments.setter
    def departments(self, departments):
        """Sets the departments of this RapidProfile.


        :param departments: The departments of this RapidProfile.  # noqa: E501
        :type: list[SimpleDepartment]
        """

        self._departments = departments

    @property
    def leader(self):
        """Gets the leader of this RapidProfile.  # noqa: E501


        :return: The leader of this RapidProfile.  # noqa: E501
        :rtype: list[Leader]
        """
        return self._leader

    @leader.setter
    def leader(self, leader):
        """Sets the leader of this RapidProfile.


        :param leader: The leader of this RapidProfile.  # noqa: E501
        :type: list[Leader]
        """

        self._leader = leader

    @property
    def last_login_time(self):
        """Gets the last_login_time of this RapidProfile.  # noqa: E501


        :return: The last_login_time of this RapidProfile.  # noqa: E501
        :rtype: datetime
        """
        return self._last_login_time

    @last_login_time.setter
    def last_login_time(self, last_login_time):
        """Sets the last_login_time of this RapidProfile.


        :param last_login_time: The last_login_time of this RapidProfile.  # noqa: E501
        :type: datetime
        """

        self._last_login_time = last_login_time

    @property
    def two_factor_enable(self):
        """Gets the two_factor_enable of this RapidProfile.  # noqa: E501


        :return: The two_factor_enable of this RapidProfile.  # noqa: E501
        :rtype: str
        """
        return self._two_factor_enable

    @two_factor_enable.setter
    def two_factor_enable(self, two_factor_enable):
        """Sets the last_login_time of this RapidProfile.


        :param last_login_time: The last_login_time of this RapidProfile.  # noqa: E501
        :type: str
        """

        self._two_factor_enable = two_factor_enable

    @property
    def create_time(self):
        """Gets the create_time of this RapidProfile.  # noqa: E501


        :return: The create_time of this RapidProfile.  # noqa: E501
        :rtype: datetime
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this RapidProfile.


        :param create_time: The create_time of this RapidProfile.  # noqa: E501
        :type: datetime
        """

        self._create_time = create_time

    @property
    def update_time(self):
        """Gets the update_time of this RapidProfile.  # noqa: E501


        :return: The update_time of this RapidProfile.  # noqa: E501
        :rtype: datetime
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this RapidProfile.


        :param update_time: The update_time of this RapidProfile.  # noqa: E501
        :type: datetime
        """

        self._update_time = update_time

    @property
    def extras(self):
        """Gets the extras of this RapidProfile.  # noqa: E501


        :return: The extras of this RapidProfile.  # noqa: E501
        :rtype: object
        """
        return self._extras

    @extras.setter
    def extras(self, extras):
        """Sets the extras of this RapidProfile.


        :param extras: The extras of this RapidProfile.  # noqa: E501
        :type: object
        """

        self._extras = extras

    @property
    def qq(self):
        """Gets the qq of this RapidProfile.  # noqa: E501


        :return: The qq of this RapidProfile.  # noqa: E501
        :rtype: str
        """
        return self._qq

    @qq.setter
    def qq(self, qq):
        """Sets the qq of this RapidProfile.


        :param qq: The qq of this RapidProfile.  # noqa: E501
        :type: str
        """

        self._qq = qq

    @property
    def email(self):
        """Gets the email of this RapidProfile.  # noqa: E501


        :return: The email of this RapidProfile.  # noqa: E501
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this RapidProfile.


        :param email: The email of this RapidProfile.  # noqa: E501
        :type: str
        """

        self._email = email

    @property
    def telephone(self):
        """Gets the telephone of this RapidProfile.  # noqa: E501


        :return: The telephone of this RapidProfile.  # noqa: E501
        :rtype: str
        """
        return self._telephone

    @telephone.setter
    def telephone(self, telephone):
        """Sets the telephone of this RapidProfile.


        :param telephone: The telephone of this RapidProfile.  # noqa: E501
        :type: str
        """

        self._telephone = telephone

    @property
    def wx_userid(self):
        """Gets the wx_userid of this RapidProfile.  # noqa: E501


        :return: The wx_userid of this RapidProfile.  # noqa: E501
        :rtype: str
        """
        return self._wx_userid

    @wx_userid.setter
    def wx_userid(self, wx_userid):
        """Sets the wx_userid of this RapidProfile.


        :param wx_userid: The wx_userid of this RapidProfile.  # noqa: E501
        :type: str
        """

        self._wx_userid = wx_userid

    @property
    def domain(self):
        """Gets the domain of this RapidProfile.  # noqa: E501


        :return: The domain of this RapidProfile.  # noqa: E501
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this RapidProfile.


        :param domain: The domain of this RapidProfile.  # noqa: E501
        :type: str
        """

        self._domain = domain

    @property
    def category_id(self):
        """Gets the category_id of this RapidProfile.  # noqa: E501


        :return: The category_id of this RapidProfile.  # noqa: E501
        :rtype: int
        """
        return self._category_id

    @category_id.setter
    def category_id(self, category_id):
        """Sets the category_id of this RapidProfile.


        :param category_id: The category_id of this RapidProfile.  # noqa: E501
        :type: int
        """

        self._category_id = category_id

    @property
    def enabled(self):
        """Gets the enabled of this RapidProfile.  # noqa: E501


        :return: The enabled of this RapidProfile.  # noqa: E501
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this RapidProfile.


        :param enabled: The enabled of this RapidProfile.  # noqa: E501
        :type: bool
        """

        self._enabled = enabled

    @property
    def iso_code(self):
        """Gets the iso_code of this RapidProfile.  # noqa: E501


        :return: The iso_code of this RapidProfile.  # noqa: E501
        :rtype: str
        """
        return self._iso_code

    @iso_code.setter
    def iso_code(self, iso_code):
        """Sets the iso_code of this RapidProfile.


        :param iso_code: The iso_code of this RapidProfile.  # noqa: E501
        :type: str
        """

        self._iso_code = iso_code

    @property
    def country_code(self):
        """Gets the country_code of this RapidProfile.  # noqa: E501


        :return: The country_code of this RapidProfile.  # noqa: E501
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this RapidProfile.


        :param country_code: The country_code of this RapidProfile.  # noqa: E501
        :type: str
        """

        self._country_code = country_code

    @property
    def language(self):
        """Gets the language of this RapidProfile.  # noqa: E501


        :return: The language of this RapidProfile.  # noqa: E501
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this RapidProfile.


        :param language: The language of this RapidProfile.  # noqa: E501
        :type: str
        """

        self._language = language

    @property
    def time_zone(self):
        """Gets the time_zone of this RapidProfile.  # noqa: E501


        :return: The time_zone of this RapidProfile.  # noqa: E501
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this RapidProfile.


        :param time_zone: The time_zone of this RapidProfile.  # noqa: E501
        :type: str
        """

        self._time_zone = time_zone

    @property
    def position(self):
        """Gets the position of this RapidProfile.  # noqa: E501


        :return: The position of this RapidProfile.  # noqa: E501
        :rtype: int
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this RapidProfile.


        :param position: The position of this RapidProfile.  # noqa: E501
        :type: int
        """

        self._position = position

    @property
    def staff_status(self):
        """Gets the staff_status of this RapidProfile.  # noqa: E501


        :return: The staff_status of this RapidProfile.  # noqa: E501
        :rtype: str
        """
        return self._staff_status

    @staff_status.setter
    def staff_status(self, staff_status):
        """Sets the staff_status of this RapidProfile.


        :param staff_status: The staff_status of this RapidProfile.  # noqa: E501
        :type: str
        """

        self._staff_status = staff_status

    @property
    def status(self):
        """Gets the status of this RapidProfile.  # noqa: E501


        :return: The status of this RapidProfile.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this RapidProfile.


        :param status: The status of this RapidProfile.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def logo(self):
        """Gets the logo of this RapidProfile.  # noqa: E501


        :return: The logo of this RapidProfile.  # noqa: E501
        :rtype: str
        """
        return self._logo

    @logo.setter
    def logo(self, logo):
        """Sets the logo of this RapidProfile.


        :param logo: The logo of this RapidProfile.  # noqa: E501
        :type: str
        """

        self._logo = logo

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(RapidProfile, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RapidProfile):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
