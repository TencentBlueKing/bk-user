# -*- coding: utf-8 -*-
"""
TencentBlueKing is pleased to support the open source community by making 蓝鲸智云-用户管理(Bk-User) available.
Copyright (C) 2017-2021 THL A29 Limited, a Tencent company. All rights reserved.
Licensed under the MIT License (the "License"); you may not use this file except in compliance with the License.
You may obtain a copy of the License at http://opensource.org/licenses/MIT
Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
specific language governing permissions and limitations under the License.
"""
# Generated by Django 1.11.23 on 2019-11-04 15:41
from __future__ import unicode_literals

from bkuser_core.profiles.constants import PositionEnum, ProfileStatus, StaffStatus
from django.db import migrations
from django.utils.translation import gettext_lazy as _


def forwards_func(apps, schema_editor):
    """添加内建字段信息"""
    DynamicFieldInfo = apps.get_model("profiles", "DynamicFieldInfo")

    builtin_fields_info = [
        dict(
            type="string",
            display_name=_("用户名"),
            name="username",
            order=1,
            require=True,
            unique=True,
            editable=False,
            builtin=True,
            visible=True,
        ),
        dict(
            type="string",
            display_name=_("全名"),
            name="display_name",
            order=2,
            require=True,
            unique=False,
            editable=True,
            builtin=True,
            visible=True,
        ),
        dict(
            type="string",
            display_name=_("邮箱"),
            name="email",
            order=3,
            require=True,
            unique=False,
            editable=True,
            builtin=True,
            visible=True,
        ),
        dict(
            type="number",
            display_name=_("手机号"),
            name="telephone",
            order=4,
            require=True,
            unique=False,
            editable=True,
            builtin=True,
            visible=True,
        ),
        dict(
            type="one_enum",
            display_name=_("账户状态"),
            name="status",
            options=ProfileStatus.get_choices(),
            order=5,
            require=True,
            unique=False,
            editable=False,
            builtin=True,
            default=ProfileStatus.NORMAL.value,
            visible=True,
        ),
        dict(
            type="one_enum",
            display_name=_("在职状态"),
            name="staff_status",
            options=StaffStatus.get_choices(),
            order=6,
            require=True,
            unique=False,
            editable=True,
            builtin=True,
            default=StaffStatus.IN.value,
            visible=True,
        ),
        dict(
            type="string",
            display_name=_("组织"),
            name="department_name",
            order=7,
            require=False,
            unique=False,
            editable=False,
            builtin=True,
            visible=True,
        ),
        dict(
            type="string",
            display_name=_("上级"),
            name="leader",
            order=8,
            require=False,
            unique=False,
            editable=False,
            builtin=True,
            visible=True,
        ),
        dict(
            type="one_enum",
            display_name=_("职务"),
            name="position",
            order=9,
            options=PositionEnum.get_choices(),
            default=PositionEnum.STAFF.value,
            require=False,
            unique=False,
            editable=True,
            builtin=True,
            visible=True,
        ),
        dict(
            type="string",
            display_name=_("微信"),
            name="wx_userid",
            order=10,
            require=False,
            unique=False,
            editable=True,
            builtin=True,
            visible=True,
        ),
        dict(
            type="string",
            display_name=_("QQ"),
            name="qq",
            order=11,
            require=False,
            unique=False,
            editable=True,
            builtin=True,
            visible=True,
        ),
    ]

    for builtin_field in builtin_fields_info:
        DynamicFieldInfo.objects.create(**builtin_field)


class Migration(migrations.Migration):

    dependencies = [
        ("profiles", "0001_initial"),
    ]

    operations = [migrations.RunPython(forwards_func)]
