# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Translations
# *.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
Pipfile.lock

# celery beat schedule file
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
.envrc

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# IDE related
.vscode
.idea/

# project related
*.swp
.DS_Store

# for silky
*.prof

# npm lock
package-lock.json

# webpack
webpack_cache/
webpack-stats.json

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Typescript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# npm
npm-debug.log*

###################
# Project related #
###################

# pages
staticfiles/
# dev files
src/pages/index-dev.html

# logs
*/logs/


# ignore global code
src/api/bkuser_global
src/saas/bkuser_global
src/login/bkuser_global
# sdk
src/saas/bkuser_sdk

# dev config
*dev*.py

# for web pages
src/saas/static
src/pages/static/lib.bundle.js
src/pages/static/lib-manifest.json
src/pages/dist/

# poetry
# only one in root dir, which is aiming for ci
/poetry.lock

# helm
deploy/helm/bk-user/charts/api/charts/
deploy/helm/bk-user/charts/saas/charts/
deploy/helm/bk-user/charts/login/charts/
deploy/helm/local_values.yaml
deploy/helm/dist/

deploy/helm/api/templates/c_*.*
deploy/helm/saas/templates/c_*.*
deploy/helm/login/templates/c_*.*
deploy/helm/bk-user-stack/templates/c_*.*

# local hooks
pre_commit_hooks

# local settings
cliff.toml
